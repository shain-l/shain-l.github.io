<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>EIGRP的简单应用</title>
    <url>/2020/08/28/EIGRP%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h4 id="1、实验目的"><a href="#1、实验目的" class="headerlink" title="1、实验目的"></a>1、实验目的</h4><p>1）掌握EIGRP的基本配置<br><br>2）理解EIGRP的邻居表、拓扑表以及路由表的含义<br><br>3）掌握查看EIGRP路由协议的相关信息<br><br>4）掌握FD、AD、S、FS以及FC的含义<br><br>5）理解EIGRP的hello报文作用<br><br>6）理解路由快速收敛的含义<br><br>7）理解EIGRP的不等价负载均衡<br></p>
<a id="more"></a>

<h4 id="2、实验拓扑"><a href="#2、实验拓扑" class="headerlink" title="2、实验拓扑"></a>2、实验拓扑</h4><p><img src="https://s1.ax1x.com/2020/08/28/dTeEvT.png"></p>
<h4 id="3、实验步骤"><a href="#3、实验步骤" class="headerlink" title="3、实验步骤"></a>3、实验步骤</h4><p><strong>（1）完成各路由器的基本配置，实现各直连设备之间可以互ping对方，要求PC1的IP地址设置为172.16.1.1/24，网关设置为172.16.1.254，PC2的IP地址设置为172.16.3.1/24，网关设置为172.16.3.254，各路由器接口间的地址自己规划</strong></p>
<blockquote>
<p>IP地址规划如拓扑图标记所示，此处不再列出</p>
</blockquote>
<p><strong>（2）全网启用EIGRP，通告各自的直连网络路由，并关闭自动汇总</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//启用EIGRP进程，AS号为90，AS号是邻居建立的前提，邻居要建立AS号必须要一样</span></span><br><span class="line">R3(config)#router eigrp 90 </span><br><span class="line"><span class="comment">//关闭自动汇总</span></span><br><span class="line">R3(config-router)#no auto-summary  </span><br><span class="line"><span class="comment">//通告网段</span></span><br><span class="line">R3(config-router)#network 192.168.23.0  //通告直连网段</span><br><span class="line">R3(config-router)#network 172.16.3.0 0.0.0.255</span><br></pre></td></tr></table></figure>

<p><img src="https://s1.ax1x.com/2020/08/28/dTmotA.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTmj0g.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTnCpq.png"></p>
<p><strong>（3）在R1上使用show ip protocols命令，观察并理解该命令的输出信息</strong></p>
<blockquote>
<p>Metric weight K1=1, K2=0, K3=1, K4=0, K5=0   – EIGRP的开销计算与这5个K值有关系</p>
<p>邻居要建立，则五个K值必须相同</p>
<p>K1：带宽；K2：负载；K3：延迟；K4：可靠性；K5：MTU</p>
<p>真正与EIGRP开销计算有关系的，只有带宽和延迟；</p>
<p>EIGRP开销=带宽+延迟</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/dTnHUJ.png"></p>
<p><strong>（4）查看各路由器的邻居表、拓扑表以及路由表，分别找出FD、AD以及S等重要信息</strong></p>
<blockquote>
<p>邻居表各字段含义</p>
<p>H：建立顺序</p>
<p>Address：对端的IP</p>
<p>Interface：从哪个接口学习到</p>
<p>Hold：定义了等待没有从邻居那里接收到任何包的最大时间，当接收到新的包以后，Hold复位（在10~15s之间循环）</p>
<p>Uptime：建立了多久</p>
<p>SRTT：向邻居发送包以及受到邻居回应ACK的平均回程时间</p>
<p>RTO：重传超时时间，路由器在重新传输包之前等待ACK的时间（应为SRTT的6倍，最大5000，若重传16次还未得到确认，则此邻居被宣布无效）</p>
<p>Q：队列计数，表示有多少个可靠报文还没有得到确认，在运行正常的环境下该值应为0（如果值大于0则说明发生了拥塞）</p>
<p>Seq：序列号</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuKaQ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTulPs.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTu1Gn.png"></p>
<blockquote>
<p>拓扑表</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuRde.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuWIH.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuhid.png"></p>
<blockquote>
<p>路由表</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuTQP.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuOoQ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTuvJs.png"></p>
<p><strong>（5）测试PC1与PC2之间的连通性</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKGYd.png"></p>
<p><strong>（6）在R2上添加一个loopback1接口，地址为200.200.200.200/24，然后在EIGRP中通告，观察R1和R3是否能马上学习到R2上新增的loopback1网段，并测试各主机与该loopback1之间的联通性</strong></p>
<blockquote>
<p>R1和R3能马上学习到R2上新增的loopback1网段</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKaOf.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTK00S.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKsYj.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKcpn.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKglq.png"></p>
<p><strong>（7）使用wireshark抓取EIGRP的报文，理解EIGRP报文各字段的含义</strong></p>
<blockquote>
<p>每隔5s发送一个hello包，保持时间为15s，即超过3个hello时间未收到hello则认为对端Down，断开连接</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKTh9.png"></p>
<p><strong>（8）在R1上添加一个loopback1接口，地址为100.100.100.100/24，然后在EIGRP中通告</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKj0O.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTKv7D.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTMphd.png"></p>
<p><strong>（9）断开R1和R3与各主机之间的连接，连接R1与R3之间的以太网接口，完成必要配置，实现200.200.200.200访问100.100.100.100的不等价负载均衡</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/29/dTM0jx.png"></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用源200.200.200.200去访问目标100.100.100.100</span></span><br><span class="line"><span class="comment">//若没有跟上source，那么默认情况下就是使用出接口去访问目标</span></span><br><span class="line">R2#ping 100.100.100.100 source 200.200.200.200  </span><br></pre></td></tr></table></figure>

<p><img src="https://s1.ax1x.com/2020/08/29/dTQP54.png"></p>
<blockquote>
<p>由于此时R2的路由表中只存在一条路径到达100.100.100.100，所以此时不存在负载均衡</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTQlPH.png"></p>
<blockquote>
<p>等价负载均衡：有多条开销相等的路径，此时可以同时从这些开销相等的路径去发送数量相同的数据包。</p>
<p>不等价负载均衡：有多条路径，但是开销不一样，此时会根据一定的比例去发送数据包。</p>
<p>对于EIGRP，默认情况下只支持等价负载均衡，并且默认情况下最多可以同时存在4条的等价负载均衡。</p>
<p>R2(config)#router eigrp 90</p>
<p>R2(config-router)#maximum-paths 8     –将等价负载均衡的条数改为8条</p>
<p>EIGRP还可以支持不等价负载均衡，但是有前提：</p>
<p>①次优路径的AD值要小于最优路径的FD值–称为FC条件，只有满足了该条件，才会存在FS。</p>
<p>②当存在FS之后，EIGRP拓扑表会存在两个下一跳，但是只会选择最优的添加进路由表。此时如果要保证路由表也有两条路径，必须手动修改V值(variance)，使得满足”最优路径的FD*V值&gt;次优路径的FD值”（默认情况下，v值为1）</p>
</blockquote>
<blockquote>
<p>此题中，最优路径为R2通过R1到达100.100.100.100，次优路径为经过R3、R1到达100.100.100.100</p>
</blockquote>
<blockquote>
<p>查看R2的路由表，此时显示的为最优路径，FD=409600</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTlmSs.png"></p>
<blockquote>
<p>次优路径的AD即为R3到达100.100.100.100的开销（FD），也为409600</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTl00K.png"></p>
<blockquote>
<p>此时不满足FC条件，则需更改开销，修改K值，更改R2的e0/0接口的延迟为3000（默认为1000）</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/29/dTlfnP.png"></p>
]]></content>
      <categories>
        <category>实验</category>
      </categories>
      <tags>
        <tag>路由协议</tag>
        <tag>EIGRP</tag>
        <tag>CCNA</tag>
      </tags>
  </entry>
  <entry>
    <title>RIP的应用</title>
    <url>/2020/08/27/RIP%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h4 id="1、-实验目的"><a href="#1、-实验目的" class="headerlink" title="1、 实验目的"></a>1、 实验目的</h4><ol>
<li>掌握RIPv2的基本配置<br></li>
<li>理解RIPv2路由条目的结构含义<br></li>
<li>理解自动汇总的含义<br></li>
<li>理解和观察周期性更新<br></li>
<li>理解debug ip rip 命令 的作用<a id="more"></a>

</li>
</ol>
<h4 id="2、-拓扑结构"><a href="#2、-拓扑结构" class="headerlink" title="2、 拓扑结构"></a>2、 拓扑结构</h4><p><img src="https://s1.ax1x.com/2020/08/28/doIIiV.png"></p>
<h4 id="3、-实验步骤"><a href="#3、-实验步骤" class="headerlink" title="3、 实验步骤"></a>3、 实验步骤</h4><p><strong>（1）完成各路由器的基本配置，实现各直连设备之间可以互 ping 对方， 要求 PC1 的 IP 地址设置为 172.16.1.1/24，网关设置为172.16.1.254， PC2 的 IP 地址设置为172.16.3.1/24，网关设置为172.16.3.254，各路由器接口间的地址自己规划。</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/27/d5mDb9.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/27/d5uw79.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/27/d5NpXn.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/27/d5NkkT.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/27/d5Ne1J.png"></p>
<p><strong>（2）在三台路由器上都启用RIPv2协议，通告各自的直连网络路由，并开启自动汇总</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">默认开启自动汇总，会在边界处把一个网段汇总成主类</span><br></pre></td></tr></table></figure>

<p><img src="https://s1.ax1x.com/2020/08/28/do543D.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do5HHI.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do5v8S.png"></p>
<p><strong>（3）在R1上使用show ip protocols命令，观察并理解该命令的输出信息</strong></p>
<blockquote>
<p>路由更新计时器：30s（默认）<br>路由无效时间：180s（默认）<br>抑制计时器：180s（默认）<br>路由刷新计时器：240s（默认）</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/dooEdI.png"></p>
<p><strong>（4）查看各路由器的路由表，观察RIP路由条目的特征</strong></p>
<blockquote>
<p>由于没有关闭自动汇总，R1上存在172.16.0.0网段的路由，则不会再学习R2上的172.16.0.0的路由</p>
<p>同理，R2上存在172.16.0.0网段的路由，则不会学习R1上的172.16.0.0的路由</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/doowy4.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dooRSO.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doo7kt.png"></p>
<p><strong>（5）分别在R2和PC2上测试R2与PC1以及PC2与PC1之间的连通性</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doTJnH.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doTtHA.png"></p>
<p><strong>（6）在R2上使用debug ip rip观察路由的发送情况</strong></p>
<blockquote>
<p>RIPv2组播地址：224.0.0.9</p>
<p>由于没有关闭自动汇总，此时发送的报文都为主类路由</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/doT09f.png"></p>
<p><strong>（7）在三台路由器上都关闭自动汇总，观察各路由表的变化，并再次测试R2与PC1以及PC2与PC1之间的连通性</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doTrjg.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doT43T.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doTLU1.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do7Z28.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do7urQ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do7QVs.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do70aR.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do7yRK.png"></p>
<p><strong>（8）再次在R2上使用debug ip rip观察路由的发送情况，比较关闭自动汇总与开启自动汇总debug输出信息的不同</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/do7von.png"></p>
<p><strong>（9）在R2上添加一个loopback1接口，地址自定</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/doHAeJ.png"></p>
<p><strong>（10）添加必要配置，实现PC1和PC2都能够正常访问在R2上的loopback1</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTPgQH.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTPhwt.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTPTfS.png"></p>
<p><strong>（11）在R1上添加一个loopback1接口，地址自定，然后在RIP中通告，观察R2和R3是否能马上学习到R1上新增的loopback1网段</strong></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTiwcQ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTi7Ax.png"></p>
<blockquote>
<p>由于rip的路由表的更新时间为30s，故在R2、R3上无法马上学习到在R1上新增的loopback1网段</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/dTFJKJ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTFtbR.png"></p>
<p><strong>（12）将R1上的loopback1接口关闭，观察R2和R3上是否还存在关于R1上的loopback1网段的路由条目</strong></p>
<blockquote>
<p>由于触发更新，R1上存在失效路由，则会马上发送更新给相邻的路由器，让他们将失效路由删除</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/dTA5uQ.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTAoHs.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/28/dTA7En.png"></p>
<p><strong>（13）使用wireshark抓取RIPv2报文，理解RIPv2报文各字段的含义</strong></p>
<blockquote>
<p>RIPv2运行在UDP的520端口上，属于应用层协议</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/08/28/dTAHNq.png"></p>
]]></content>
      <categories>
        <category>实验</category>
      </categories>
      <tags>
        <tag>路由协议</tag>
        <tag>CCNA</tag>
        <tag>RIP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>hello world</tag>
      </tags>
  </entry>
</search>
